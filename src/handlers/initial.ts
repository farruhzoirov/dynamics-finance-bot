import { Keyboard } from 'grammy';
import { MyContext } from '../bot';
import { UserStepModel } from '../models/user-step.model';
import { UserModel } from '../models/user.model';
import { UserRoles } from '../common/enums/roles.enum';

export async function handleInitialMenu(ctx: MyContext) {
  const [user, userActions] = await Promise.all([
    UserModel.findOne({ userId: ctx.from?.id }),
    UserStepModel.findOne({ userId: ctx.from?.id })
  ]);
  if (!userActions || !user) return;

  let mainMenu = new Keyboard()
    .text(
      userActions?.data?.language === 'uz'
        ? 'üè† Asosiy menyu'
        : 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
    )
    .text(
      userActions?.data?.language === 'uz' ? '‚öô Sozlamalar' : '‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏'
    )
    .row();

  switch (user.role) {
    case UserRoles.director:
    case UserRoles.cashier:
      mainMenu = new Keyboard()
        .text(
          userActions?.data?.language === 'uz'
            ? 'üè† Asosiy menyu'
            : 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
        )
        .text(
          userActions?.data?.language === 'uz'
            ? '‚öô Sozlamalar'
            : '‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏'
        )
        .row()
        .text(userActions?.data?.language === 'uz' ? 'üí≥ Balans' : 'üí≥ –ë–∞–ª–∞–Ω—Å');
      break;
  }

  await ctx.reply(
    userActions?.data?.language === 'uz' ? '‚¨áÔ∏è Menyular' : '‚¨áÔ∏è –ú–µ–Ω—é',
    {
      reply_markup: mainMenu.resized()
    }
  );
}
