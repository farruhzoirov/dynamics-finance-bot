import { MyContext } from '../bot';
import { Currency } from '../common/enums/currency.enum';
import { UserRoles } from '../common/enums/roles.enum';
import { formatAmountByCurrency } from '../helpers/format-amount';
import { getBalance } from '../helpers/get-balance';
import { UserStepModel } from '../models/user-step.model';
import { UserModel } from '../models/user.model';
import { getCurrencyRates } from '../services/get-currency.service';

export async function getBalanceHandler(ctx: MyContext) {
  const userId = ctx?.from?.id;
  const [userActions, findUser] = await Promise.all([
    UserStepModel.findOne({
      userId: userId
    }),
    UserModel.findOne({
      userId: userId
    })
  ]);

  if (ctx.callbackQuery?.data) {
    await ctx.answerCallbackQuery();
  }

  if (
    findUser!.role !== UserRoles.director &&
    findUser!.role !== UserRoles.cashier
  ) {
    return await ctx.reply(
      userActions!.data!.language === 'uz'
        ? 'Siz bu xususiyatdan foydalana olmaysiz.'
        : '–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π.'
    );
  }
  if (!userActions) return;
  const [balanceInUSD, balanceUZS, currencyRates] = await Promise.all([
    getBalance(Currency.USD),
    getBalance(Currency.UZS),
    getCurrencyRates()
  ]);

  if (!currencyRates) return await ctx.reply('Error in getCurrencyRates');

  const lang = userActions.data.language;
  await UserStepModel.updateOne(
    { userId },
    {
      $set: {
        step: 'main_menu'
      }
    },
    { upsert: true }
  );

  if (lang === 'uz') {
    return ctx.reply(
      `üí≥ *Balans holati:*\n\n` +
        `üá∫üá∏ AQSh dollari: *${formatAmountByCurrency(balanceInUSD.balance, Currency.USD, lang)}*\n` +
        `üá∫üáø So'm: *${formatAmountByCurrency(balanceUZS.balance, Currency.UZS, lang)}*\n` +
        `AQSH dollari sotib olish kursi(Kapitalbank): *${formatAmountByCurrency(currencyRates.buyValue, Currency.UZS, lang)}*\n` +
        `AQSH dollari sotish kursi(Kapitalbank): *${formatAmountByCurrency(currencyRates.saleValue, Currency.UZS, lang)}*\n\n` +
        `üìå Bu balans hisobingizdagi mavjud mablag'ni ifodalaydi. Yangi tranzaksiyalar yoki operatsiyalarni amalga oshirishdan oldin balansni tekshirib turing.`,
      { parse_mode: 'Markdown' }
    );
  }

  return ctx.reply(
    `üí≥ *–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:*\n\n` +
      `üá∫üá∏ –î–æ–ª–ª–∞—Ä—ã –°–®–ê: *${formatAmountByCurrency(balanceInUSD.balance, Currency.USD, 'ru')}*\n` +
      `üá∫üáø –°—É–º: *${formatAmountByCurrency(balanceUZS.balance, Currency.UZS, 'ru')}*\n` +
      `–ö—É—Ä—Å –ø–æ–∫—É–ø–∫–∏ –¥–æ–ª–ª–∞—Ä–∞ –°–®–ê (–ö–∞–ø–∏—Ç–∞–ª–±–∞–Ω–∫): *${formatAmountByCurrency(currencyRates.buyValue, Currency.UZS, lang)}*\n` +
      `–ö—É—Ä—Å –ø—Ä–æ–¥–∞–∂–∏ –¥–æ–ª–ª–∞—Ä–∞ –°–®–ê (–ö–∞–ø–∏—Ç–∞–ª–±–∞–Ω–∫): *${formatAmountByCurrency(currencyRates.saleValue, Currency.UZS, lang)}*\n\n` +
      `üìå –≠—Ç–æ –≤–∞—à —Ç–µ–∫—É—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å—á–µ—Ç—É. –ü–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –æ–ø–µ—Ä–∞—Ü–∏–π –∏–ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å.`,
    { parse_mode: 'Markdown' }
  );
}
